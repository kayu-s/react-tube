{"version":3,"sources":["store/index.js","components/Header/Header.js","components/Layout/Layout.js","apis/index.js","components/VideoGrid/VideoGrid.js","components/VideoGridItem/VideoGridItem.js","pages/Top.js","pages/Search.js","components/VideoPlay/VideoPlay.js","components/VIdeoDetail/VideoDetail.js","components/SideListItem/SideListItem.js","components/SideList/SideList.js","pages/Watch.js","App.js","serviceWorker.js","index.js","components/Header/Header.module.scss","components/Layout/Layout.module.scss","components/VideoPlay/VideoPlay.module.scss","components/SideListItem/SideListItem.module.scss","components/VideoGrid/VideoGrid.module.scss","components/VideoGridItem/VideoGridItem.module.scss","components/VIdeoDetail/VideoDetail.module.scss","components/SideList/SideList.module.scss"],"names":["initialState","popular","related","searched","selected","term","reducer","state","action","type","payload","Store","createContext","globalState","setGlobalState","StoreProvider","children","useReducer","Provider","value","Header","useState","setTerm","history","useHistory","useContext","useEffect","className","Style","header","item","to","onSubmit","e","preventDefault","push","placeholder","onChange","target","icon","faSearch","Layout","wrapper","main","youtube","axios","create","baseURL","params","part","maxResuls","key","regionCode","fetchPopularData","a","get","chart","fetchSelectedData","id","fetchRelatedData","relatedToVideoId","fetchSearchData","query","q","Videogrid","container","Videogriditem","src","title","pathname","search","alt","Top","then","res","data","items","map","snippet","thumbnails","standard","url","Search","props","location","useLocation","setSearchResult","searchParams","URLSearchParams","videoId","medium","Videoplay","wrap","video","Videodetail","description","SideListitem","info","SideList","sidenav","Watch","setVideos","Promise","all","shift","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.28c1f264.chunk.js","sourcesContent":["import React, { createContext, useReducer } from \"react\";\r\nimport { act } from \"react-dom/test-utils\";\r\n\r\nconst initialState = {\r\n  popular: [],\r\n  related: [],\r\n  searched: [],\r\n  selected: {},\r\n  term: \"\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"SET_POPULAR\":\r\n      return { ...state, popular: action.payload.popular };\r\n    case \"SET_RELATED\":\r\n      return { ...state, related: action.payload.related };\r\n    case \"SET_SEARCHED\":\r\n      return { ...state, searched: action.payload.searched };\r\n    case \"SET_SELECTED\":\r\n      return { ...state, selected: action.payload.selected };\r\n    case \"SET_TERM\":\r\n      return { ...state, term: action.payload.term };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const Store = createContext({\r\n  globalState: initialState,\r\n  setGlobalState: () => null,\r\n});\r\n\r\nexport function StoreProvider({ children }) {\r\n  const [globalState, setGlobalState] = useReducer(reducer, initialState);\r\n  return (\r\n    <Store.Provider value={{ globalState, setGlobalState }}>\r\n      {children}\r\n    </Store.Provider>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Style from \"./Header.module.scss\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Store } from \"../../store/index\";\r\n\r\nexport default function Header() {\r\n  const [term, setTerm] = useState(\"\");\r\n  const history = useHistory();\r\n  const { globalState, setGlobalState } = useContext(Store);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setGlobalState({ type: \"SET_TERM\", payload: { term: term } });\r\n    history.push(`/search?query=${term}`);\r\n  };\r\n  useEffect(() => {\r\n    setTerm(globalState.term);\r\n  }, []);\r\n  return (\r\n    <div className={Style.header}>\r\n      <div className={Style.item}>\r\n        <Link to=\"/\">VideoTube</Link>\r\n      </div>\r\n      <div className={Style.item}>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"検索\"\r\n            onChange={(e) => setTerm(e.target.value)}\r\n            value={term}\r\n          />\r\n          <button type=\"submit\">\r\n            <FontAwesomeIcon icon={faSearch} />\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Header from \"../Header/Header\";\r\nimport Style from \"./Layout.module.scss\";\r\nexport default function Layout({ children }) {\r\n  return (\r\n    <div>\r\n      <div className={Style.wrapper}>\r\n        <Header />\r\n        <div className={Style.main}>{children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst KEY = \"AIzaSyCM1AydXk4Fvi5IePVZ3snn4VVq5UPWPzk\";\r\nconst youtube = axios.create({\r\n  baseURL: \"https://www.googleapis.com/youtube/v3\",\r\n});\r\n\r\nconst params = {\r\n  part: \"snippet\",\r\n  maxResuls: 40,\r\n  key: KEY,\r\n  regionCode: \"JP\",\r\n  type: \"video\",\r\n};\r\n\r\nexport const fetchPopularData = async () => {\r\n  //非同期関数\r\n  return await youtube.get(\"/videos\", {\r\n    params: {\r\n      ...params,\r\n      chart: \"mostPopular\",\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchSelectedData = async (id) => {\r\n  return await youtube.get(\"/videos\", {\r\n    params: {\r\n      ...params,\r\n      id,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchRelatedData = async (id) => {\r\n  return await youtube.get(\"/search\", {\r\n    params: {\r\n      ...params,\r\n      relatedToVideoId: id,\r\n    },\r\n  });\r\n};\r\n\r\nexport const fetchSearchData = async (query) => {\r\n  return await youtube.get(\"/search\", {\r\n    params: {\r\n      ...params,\r\n      q: query,\r\n    },\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport Style from \"./VideoGrid.module.scss\";\r\nexport default function Videogrid({ children }) {\r\n  return <div className={Style.container}>{children}</div>;\r\n}\r\n","import React from \"react\";\r\nimport Style from \"./VideoGridItem.module.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nexport default function Videogriditem({ id, src, title }) {\r\n  return (\r\n    <Link to={{ pathname: \"watch\", search: `?v=${id}` }} className={Style.item}>\r\n      <div>\r\n        <img src={src} alt={title} />\r\n        <span>{title}</span>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport Layout from \"../components/Layout/Layout\";\r\nimport { fetchPopularData } from \"../apis/index\";\r\nimport { Store } from \"../store/index\";\r\nimport VideoGrid from \"../components/VideoGrid/VideoGrid\";\r\nimport VideoGridItem from \"../components/VideoGridItem/VideoGridItem\";\r\nexport function Top() {\r\n  const { globalState, setGlobalState } = useContext(Store);\r\n  useEffect(() => {\r\n    fetchPopularData().then((res) => {\r\n      setGlobalState({\r\n        type: \"SET_POPULAR\",\r\n        payload: { popular: res.data.items },\r\n      });\r\n    });\r\n  }, []); //初回のみ実行でいいので空配列を渡す = componentDidmount\r\n  return (\r\n    <Layout>\r\n      <VideoGrid>\r\n        {globalState.popular &&\r\n          globalState.popular.map((popular) => {\r\n            return (\r\n              <VideoGridItem\r\n                id={popular.id}\r\n                key={popular.id}\r\n                src={popular.snippet.thumbnails.standard.url}\r\n                title={popular.snippet.title}\r\n              />\r\n            );\r\n          })}\r\n      </VideoGrid>\r\n    </Layout>\r\n  );\r\n}\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport Layout from \"../components/Layout/Layout\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { fetchSearchData } from \"../apis\";\r\nimport { Store } from \"../store/index\";\r\nimport VideoGrid from \"../components/VideoGrid/VideoGrid\";\r\nimport VideoGridItem from \"../components/VideoGridItem/VideoGridItem\";\r\nexport function Search(props) {\r\n  const { globalState, setGlobalState } = useContext(Store);\r\n  const location = useLocation();\r\n  const setSearchResult = async () => {\r\n    const searchParams = new URLSearchParams(location.search);\r\n    const query = searchParams.get(\"query\");\r\n    if (query) {\r\n      await fetchSearchData(query).then((res) => {\r\n        setGlobalState({\r\n          type: \"SET_SEARCHED\",\r\n          payload: { searched: res.data.items },\r\n        });\r\n      });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    setSearchResult();\r\n  }, [location.search]);\r\n  return (\r\n    <Layout>\r\n      <VideoGrid>\r\n        {globalState.searched ? (\r\n          globalState.searched.map((search) => {\r\n            return (\r\n              <VideoGridItem\r\n                id={search.id.videoId}\r\n                key={search.id.videoId}\r\n                src={search.snippet.thumbnails.medium.url}\r\n                title={search.snippet.title}\r\n              />\r\n            );\r\n          })\r\n        ) : (\r\n          <span>no data</span>\r\n        )}\r\n      </VideoGrid>\r\n    </Layout>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Youtube from \"react-youtube\";\r\nimport Style from \"./VideoPlay.module.scss\";\r\n\r\nexport default function Videoplay({ id }) {\r\n  return (\r\n    <div className={Style.wrap}>\r\n      <Youtube className={Style.video} videoId={id} />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { Store } from \"../../store\";\r\nimport VideoPlay from \"../VideoPlay/VideoPlay\";\r\nimport Style from \"./VideoDetail.module.scss\";\r\nimport Linkify from \"react-linkify\";\r\n\r\nexport default function Videodetail(props) {\r\n  const { globalState } = useContext(Store);\r\n  return globalState.selected && globalState.selected.id ? (\r\n    <div className={Style.wrap}>\r\n      <VideoPlay id={globalState.selected.id} />\r\n      <p>{globalState.selected.snippet.title}</p>\r\n      <hr />\r\n      <Linkify>\r\n        <pre>{globalState.selected.snippet.description}</pre>\r\n      </Linkify>\r\n    </div>\r\n  ) : (\r\n    <span>no data</span>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Style from \"./SideListItem.module.scss\";\r\nexport default function SideListitem(props) {\r\n  const { id, src, title } = props;\r\n\r\n  return (\r\n    <Link className={Style.item} to={{ pathname: \"watch\", search: `v=${id}` }}>\r\n      <img src={src} alt={title} />\r\n      <div className={Style.info}>\r\n        <span>{title}</span>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { Store } from \"../../store\";\r\nimport SideListItem from \"../SideListItem/SideListItem\";\r\nimport Style from \"./SideList.module.scss\";\r\n\r\nexport default function SideList() {\r\n  const { globalState } = useContext(Store);\r\n\r\n  return (\r\n    <div className={Style.sidenav}>\r\n      {globalState.related ? (\r\n        globalState.related.map((video) => {\r\n          return (\r\n            <SideListItem\r\n              id={video.id.videoId}\r\n              key={video.id.videoId}\r\n              title={video.snippet.title}\r\n              src={video.snippet.thumbnails.medium.url}\r\n            />\r\n          );\r\n        })\r\n      ) : (\r\n        <span>no data</span>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport Layout from \"../components/Layout/Layout\";\r\nimport Videodetail from \"../components/VIdeoDetail/VideoDetail\";\r\nimport SideList from \"../components/SideList/SideList\";\r\nimport { Store } from \"../store/index\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { fetchSelectedData, fetchRelatedData } from \"../apis/index\";\r\n\r\nexport function Watch(props) {\r\n  const { setGlobalState } = useContext(Store);\r\n  const location = useLocation();\r\n  const setVideos = async () => {\r\n    const searchParams = new URLSearchParams(location.search);\r\n    const id = searchParams.get(\"v\");\r\n    if (id) {\r\n      const [selected, related] = await Promise.all([\r\n        fetchSelectedData(id),\r\n        fetchRelatedData(id),\r\n      ]);\r\n      setGlobalState({\r\n        type: \"SET_SELECTED\",\r\n        payload: { selected: selected.data.items.shift() },\r\n      });\r\n      setGlobalState({\r\n        type: \"SET_RELATED\",\r\n        payload: { related: related.data.items },\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setVideos();\r\n  }, [location.search]);\r\n  return (\r\n    <Layout>\r\n      <Videodetail />\r\n      <SideList />\r\n    </Layout>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Top } from \"./pages/Top\";\r\nimport { Search } from \"./pages/Search\";\r\nimport { Watch } from \"./pages/Watch\";\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Top} />\r\n        <Route exact path=\"/search\" component={Search} />\r\n        <Route exact path=\"/watch\" component={Watch} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { StoreProvider } from \"./store\";\r\nimport normalize from \"normalize.css\";\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <StoreProvider>\r\n      <App />\r\n    </StoreProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__a95k5\",\"item\":\"Header_item__20LUh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Layout_wrapper__ni1UW\",\"main\":\"Layout_main__1s8hb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"VideoPlay_wrap__2eC8o\",\"video\":\"VideoPlay_video__2XfoU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"SideListItem_item__3umOc\",\"info\":\"SideListItem_info__aguBk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"VideoGrid_container__YHt-R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"VideoGridItem_item__2mBgK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"VideoDetail_wrap__3bh_S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidenav\":\"SideList_sidenav__nSXiK\"};"],"sourceRoot":""}